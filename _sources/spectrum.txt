***************************************************
:mod:`spectrum` -- Analysis of hyperfine structures
***************************************************

The :mod:`spectrum` module facilitates the creation of hyperfine structure profiles (usually through the class :class:`SingleSpectrum`), and the fitting of these profiles to data. Currently, it takes into account the contributions of dipole, quadrupole and octupole moments, and the formula used for the lineshapes can be selected from the module :mod:`profiles`. The hyperfine parameters, as well as the requested frequency, have to be supplied in units of MHz.

Also included are routines for fitting the data in two different ways:
    * Using a least-squares approach (assuming Gaussian errors)
    * Using a maximum likelihood approach (assuming Poisson errors)

Both of these methods are based on the fact that, for spectroscopic data, the error on the number of counts is Poisson-distributed, which can be approximated for large values by :math:`\sqrt{N}`. A convenience routine is included to introduce the square root as the error, taking care with zero counts.

Furthermore, simultaneous fitting is also possible, through the use of the class :class:`CombinedSpectrum`, as is the presence of an isomer through the class :class:`IsomerSpectrum`. The usage examples go through a few of the basic commands for each of these cases.

.. warning::
    The fitroutines are quite robust, but are not always convergent. Care has to be taken when using these routines, that the result still makes sense. Starting from a different set of parameters is highly recommended if the fit does not behave. If a maximum likelihood fit is having some issues, consider first doing a least-squares fit, which is a bit quicker and more robust, to estimate the starting parameters. Another issue is using large numbers for the frequency: best results are obtained of a deviation from a central frequency is used, so the frequency is kept in the few thousand MHz range.

Usage examples
==============

Spectrum creation
-----------------
Creating a simple hyperfinestructure uses the class :class:`SingleSpectrum` from the :mod:`spectrum` module. Fitting to a single dataset is also demonstrated.

.. plot:: pyplots/SingleSpectrumExample.py
    :include-source:

Multiple spectrum fitting
-------------------------

Combination of single spectra
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

The creation of a :class:`CombinedSpectrum` from :class:`SingleSpectra` is demonstrated. Fitting to two datasets is also demonstrated.

.. plot:: pyplots/CombinedSingleSpectrum.py
    :include-source:

Combination of spectra with isomeric presence
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Adding in isomeric peaks complicates the spectrum

.. plot:: pyplots/IsomerExample.py
    :include-source:

Code documentation
==================
.. automodule:: satlas.spectrum
    :members:
    :show-inheritance: